def mapper(sentences):
   """Map function that produces key-value pairs for each word."""
   output = []
   for sentence in sentences:
     for word in sentence.split():
       word = word.lower().strip()
       output.append((word, 1))
   return output
def reducer(mapped_values):
   """Reduce function that aggregates values for the same key."""
   word_count = {}
   for word, count in mapped_values:
     if word not in word_count:
       word_count[word] = 0
     word_count[word] += count
   return word_count

# Sample data: list of sentences
sentences = ["Dear Bear River", "Car Car River", "Dear Car Bear"]

# Map phase
mapped_values = mapper(sentences)
# Reduce phase
word_counts = reducer(mapped_values)
# Output the results
print(word_counts)
   
{'dear': 2, 'bear': 2, 'river': 2, 'car': 3}
