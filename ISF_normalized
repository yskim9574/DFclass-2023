import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import StandardScaler

df = pd.read_csv('ISF.csv')
print(df.head())
print(df.tail())
print(df.shape)
print(df.columns)

# Distinguish between input and output columns in a data frame

X = df.drop('Spring-back', axis=1) 
y = df['Spring-back']
print(X)
print(y)

# Perform normalization on each column
# X_max X_min normalization. Set w_n value (set to 0 in this example)
# If w_n = 0, the columns are normalized to values between 0 and 1.

w_n = 0.35 
for column in X.columns:
    C_min = X[column].min()
    C_max = X[column].max()
    D = C_max - C_min
    X[column] = (X[column] - (C_min - w_n * D)) / ((C_max + w_n * D) - (C_min - w_n * D))
normalized_X=X

#scaler=MinMaxScaler() 또는 #scaler=StandardScaler()

#normalized_X = scaler.fit_transform(X)

# Separate input and output values in a normalized data frame
print(normalized_X)
print(y)


# Separate input and output values in a normalized data frame
print(normalized_df.round(4))
print(y.round(4))
