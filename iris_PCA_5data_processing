from sklearn.datasets import load_iris
import numpy as np
import matplotlib.pyplot as plt


# Load the dataset
iris = load_iris()
X = iris.data[:5]  # Selecting the first 5 data points in this example
print("Data:")
print(X)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_std = scaler.fit_transform(X)
print("\nStandardized Data:")
print(X_std.round(3))

covariance_matrix = np.cov(X_std, rowvar=False)
print("\nCovariance Matrix:")
print(covariance_matrix.round(3))

eigenvalues, eigenvectors = np.linalg.eig(covariance_matrix)
print("\nEigenvalues:")
print(eigenvalues.round(3))
print("\nEigenvectors:")
print(eigenvectors.round(3))

sorted_index = np.argsort(eigenvalues)[::-1]
sorted_eigenvalues = eigenvalues[sorted_index]
sorted_eigenvectors = eigenvectors[:, sorted_index]
print("\nSorted Eigenvalues:")
print(sorted_eigenvalues.round(3))
print("\nCorresponding Eigenvectors:")
print(sorted_eigenvectors.round(3))

principal_components = sorted_eigenvectors[:, :2]
print("\nPrincipal Components:")
print(principal_components.round(3))

X_pca = np.dot(X_std, principal_components)
print("\nProjected Data:")
print(X_pca.round(3))

# Original data plot

plt.scatter(X_pca[:, 0], X_pca[:, 1], color='blue')
plt.title("\nProjected Data:")
plt.xlabel('pca_component1'), plt.ylabel('pca_component2')
